{"ast":null,"code":"var _jsxFileName = \"/Users/christiangould/personal/connect4_online/cnn4/src/components/ConnectRow/ConnectRow.jsx\";\nimport empty from '../../assets/BoardImages/empty.png';\nimport yellow from '../../assets/BoardImages/yellow.png';\nimport red from '../../assets/BoardImages/red.png';\nimport Grid2 from '@mui/material/Unstable_Grid2/Grid2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConnectRow(_ref) {\n  let {\n    row\n  } = _ref;\n  // The row is an array of 7 elements, and I want those in a row left to right\n  return /*#__PURE__*/_jsxDEV(Grid2, {\n    container: true,\n    spacing: 0,\n    direction: \"row\",\n    children: row.map((col, i) =>\n    /*#__PURE__*/\n    //   {\n    //     (col === 0) ? <img src={empty} alt=\"empty piece\"></img> : (col === -1) ? <img src={yellow} alt=\"yellow piece\"></img> : <img src={red} alt=\"red piece\"></img>\n    //   }\n    _jsxDEV(Grid2, {\n      item: true,\n      xs: 1.6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = ConnectRow;\nvar _c;\n$RefreshReg$(_c, \"ConnectRow\");","map":{"version":3,"names":["empty","yellow","red","Grid2","ConnectRow","row","map","col","i"],"sources":["/Users/christiangould/personal/connect4_online/cnn4/src/components/ConnectRow/ConnectRow.jsx"],"sourcesContent":["import empty from '../../assets/BoardImages/empty.png';\nimport yellow from '../../assets/BoardImages/yellow.png'; \nimport red from '../../assets/BoardImages/red.png';\nimport Grid2 from '@mui/material/Unstable_Grid2/Grid2';\n\nexport default function ConnectRow({ row }) {\n  // The row is an array of 7 elements, and I want those in a row left to right\n  return (\n    <Grid2 container spacing={0}\n      direction={\"row\"}\n    >\n      {row.map((col, i) => (\n        //   {\n        //     (col === 0) ? <img src={empty} alt=\"empty piece\"></img> : (col === -1) ? <img src={yellow} alt=\"yellow piece\"></img> : <img src={red} alt=\"red piece\"></img>\n        //   }\n        <Grid2 item xs={1.6}>\n        </Grid2>\n      ))}\n    </Grid2>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,oCAAoC;AACtD,OAAOC,MAAM,MAAM,qCAAqC;AACxD,OAAOC,GAAG,MAAM,kCAAkC;AAClD,OAAOC,KAAK,MAAM,oCAAoC;AAAC;AAEvD,eAAe,SAASC,UAAU,OAAU;EAAA,IAAT;IAAEC;EAAI,CAAC;EACxC;EACA,oBACE,QAAC,KAAK;IAAC,SAAS;IAAC,OAAO,EAAE,CAAE;IAC1B,SAAS,EAAE,KAAM;IAAA,UAEhBA,GAAG,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC;IAAA;IACd;IACA;IACA;IACA,QAAC,KAAK;MAAC,IAAI;MAAC,EAAE,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA,QAErB;EAAC;IAAA;IAAA;IAAA;EAAA,QACI;AAEZ;AAAC,KAfuBJ,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}