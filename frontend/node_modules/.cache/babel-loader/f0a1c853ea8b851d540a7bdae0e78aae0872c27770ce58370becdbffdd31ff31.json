{"ast":null,"code":"var _jsxFileName = \"/Users/christiangould/personal/connect4_online/cnn4/src/components/ConnectBoard/ConnectBoard.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Grid2 from '@mui/material/Unstable_Grid2/Grid2';\nimport empty from '../../assets/BoardImages/empty.png';\nimport yellow from '../../assets/BoardImages/yellow.png';\nimport red from '../../assets/BoardImages/red.png';\nimport nothing from '../../assets/BoardImages/space.png';\nimport { getMove } from '../../api/MoveApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ConnectBoard() {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [player, setPlayer] = useState(1);\n  const colNums = [0, 1, 2, 3, 4, 5, 6];\n\n  // Set up the board at the beginning of the game\n  useEffect(() => {\n    const newBoard = [];\n    for (let i = 0; i < 6; i++) {\n      newBoard.push([]);\n      for (let j = 0; j < 7; j++) {\n        newBoard[i].push(0);\n      }\n    }\n    setBoard(newBoard);\n  }, []);\n  function update() {\n    getMove(board, player).then(res => {\n      console.log(res);\n      resolve(res);\n    });\n  }\n  function insertPieceAtCol(col, player) {\n    var newBoard = [...board];\n    // Check if the column has an open space\n    if (newBoard[0][col] === 0) {\n      for (let i = 0; i < 6; i++) {\n        if (newBoard[i][col] !== 0) {\n          newBoard[i - 1][col] = player;\n          break;\n        } else if (i === 5) {\n          newBoard[i][col] = player;\n          break;\n        }\n      }\n    } else {\n      // If the column is full, do nothing\n      return;\n    }\n    setBoard(newBoard);\n    setPlayer(-player);\n    update();\n  }\n\n  // visualize a connect 4 board\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid2, {\n      container: true,\n      spacing: 0,\n      direction: \"row\",\n      children: board.map((row, i) => /*#__PURE__*/_jsxDEV(Grid2, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid2, {\n          container: true,\n          spacing: 0,\n          direction: \"row\",\n          children: row.map((col, i) => /*#__PURE__*/_jsxDEV(Grid2, {\n            item: true,\n            xs: 1.25,\n            onClick: () => insertPieceAtCol(i, player),\n            children: col === 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: empty,\n              alt: \"empty piece\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this) : col === -1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: yellow,\n              alt: \"yellow piece\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 96\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: red,\n              alt: \"red piece\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 142\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n      container: true,\n      spacing: 0,\n      direction: \"row\",\n      children: colNums.map(x => /*#__PURE__*/_jsxDEV(Grid2, {\n        item: true,\n        xs: 1.25,\n        onClick: () => {\n          insertPieceAtCol(x, player);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: nothing,\n          alt: \"empty piece\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ConnectBoard, \"h0ghH9URN3j7ee9CihiC2O8OV3E=\");\n_c = ConnectBoard;\nvar _c;\n$RefreshReg$(_c, \"ConnectBoard\");","map":{"version":3,"names":["useState","useEffect","Grid2","empty","yellow","red","nothing","getMove","ConnectBoard","board","setBoard","player","setPlayer","colNums","newBoard","i","push","j","update","then","res","console","log","resolve","insertPieceAtCol","col","map","row","x"],"sources":["/Users/christiangould/personal/connect4_online/cnn4/src/components/ConnectBoard/ConnectBoard.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Grid2 from '@mui/material/Unstable_Grid2/Grid2';\nimport empty from '../../assets/BoardImages/empty.png';\nimport yellow from '../../assets/BoardImages/yellow.png';\nimport red from '../../assets/BoardImages/red.png';\nimport nothing from '../../assets/BoardImages/space.png';\nimport { getMove } from '../../api/MoveApi';\n\nexport default function ConnectBoard() {\n  const [board, setBoard] = useState([]);\n  const [player, setPlayer] = useState(1);\n  const colNums = [0, 1, 2, 3, 4, 5, 6];\n\n  // Set up the board at the beginning of the game\n  useEffect(() => {\n    const newBoard = [];\n    for (let i = 0; i < 6; i++) {\n      newBoard.push([]);\n      for (let j = 0; j < 7; j++) {\n        newBoard[i].push(0);\n      }\n    }\n    setBoard(newBoard);\n  }, []);\n\n  function update() {\n    getMove(board, player).then((res) => {\n      console.log(res);\n      resolve(res);\n    });\n  }\n\n  function insertPieceAtCol(col, player) {\n    var newBoard = [...board];\n    // Check if the column has an open space\n    if (newBoard[0][col] === 0) {\n      for (let i = 0; i < 6; i++) {\n        if (newBoard[i][col] !== 0) {\n          newBoard[i - 1][col] = player;\n          break;\n        }\n        else if (i === 5) {\n          newBoard[i][col] = player;\n          break;\n        }\n      }\n    }\n    else {\n      // If the column is full, do nothing\n      return;\n    }\n    setBoard(newBoard);\n    setPlayer(-player);\n    update();\n  }\n\n  // visualize a connect 4 board\n  return (\n    <>\n      <Grid2 container spacing={0}\n      direction=\"row\"\n      >\n        {board.map((row, i) => (\n          <Grid2 item xs={12}>\n            <Grid2 container spacing={0}\n              direction={\"row\"}\n            >\n                {row.map((col, i) => (\n                  <Grid2 item xs={1.25}\n                    onClick={() => insertPieceAtCol(i, player)}\n                  >\n                    {\n                      (col === 0) ? <img src={empty} alt=\"empty piece\"></img> : (col === -1) ? <img src={yellow} alt=\"yellow piece\"></img> : <img src={red} alt=\"red piece\"></img>\n                    }\n                  </Grid2>\n                ))}\n              </Grid2>\n          </Grid2>\n        ))}\n\n      </Grid2>\n\n      <Grid2 container spacing={0}\n        direction={\"row\"}\n      >\n        {colNums.map((x) => (\n          <Grid2 item xs={1.25} onClick={() => { insertPieceAtCol(x, player) }}>\n            <img src={nothing} alt=\"empty piece\"></img>\n          </Grid2>\n        ))}\n      </Grid2>\n    </>\n  );\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}